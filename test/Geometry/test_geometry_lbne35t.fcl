#
# Geometry test module on LBNE 35t geometry
# 
# Version: 1.0
#

#include "geometry_lbne.fcl"

process_name: testGeo

services: {
  user: {
    Geometry:               @local::lbne35t_geo
    ExptGeoHelperInterface: @local::lbne_geometry_helper
  }
  message: {
    destinations: {
      LogDebugFile: { 
        type:       "file"
        filename:   "geometry_lbne35t.txt"
        append:     false
        threshold:  "INFO"
        categories:{
          default:      { limit: 0 }
          GeometryTest: { limit: -1 }
        }
      }
      LogStandardOut: {
        type:       "cout"
        threshold:  "INFO"
        categories:{
          default:{ limit: -1 }
          RecoBaseDefaultCtor: { limit: 0 }
          AnaBaseDefaultCtor:  { limit: 0 }
          GeometryBadInputPoint: { limit: 5 timespan: 1000}
        }
      }
      LogStandardError: {
        type:       "cerr"
        threshold:  "ERROR"
        categories:{
          default:{ }
        }
      }
    }
  }
}

source: {
  module_type: EmptyEvent
  maxEvents:   1       # Number of events to create
}

outputs: { }

physics: {

  analyzers: {
    geotest: {
      module_type: "GeometryTest"
      PrintWires:  true
      # The test feeds a out-of-world coordinate to NearestWire() and expects
      # an exception to be thrown; LBNE currently prefers to cap the wire ID to
      # a valid wire.
      # Therefore we disable that part of the test.
      DisableWireBoundaryCheck: true

      # Tests can be selected individually using a list of strings called RunTests
      # See source code for specific strings in case new tests are added
#      RunTests:  [
#          "Cryostat",
#          "ChannelToWire",
#          "FindPlaneCenters",
#          "Projection",
#          "NearestWire",
#          "WireIntersection",
#          "WirePitch",
#          "PlanePitch",
#          "Stepping" 
#      ]
    }

    geotest35: {
      module_type: "GeometryTest35"
    }
  }

  ana:           [ geotest, geotest35 ]

  trigger_paths: [ ]
  end_paths:     [ ana ]
}

# Uncomment if you want to check for overlaps
# physics.analyzers.geotest.CheckForOverlaps: true 
