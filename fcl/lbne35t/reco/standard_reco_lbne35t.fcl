#include "services_lbne.fcl"
#include "caldata_lbne.fcl"
#include "hitfindermodules_lbne35t.fcl"
#include "cluster_lbne.fcl"
#include "trackfindermodules_lbne.fcl"
#include "pandoramodules_lbne.fcl"

process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "reco_hist.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::lbne_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
  user:         @local::lbne35t_services
}
#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
# random number saver
  rns:                 { module_type: RandomNumberSaver }
# convert raw::RawDigit to recob::wire
  caldata:            @local::lbne35t_calwire
# cheater reconstruction
  hitcheat:           @local::lbne35t_hitcheater
  clustercheat:       @local::lbne35t_clustercheater
  trackcheat:         @local::lbne35t_trackcheater
# actual hit finder
  gaushit:            @local::lbne35t_gaushitfinder
  fasthit:            @local::lbne35t_fasthitfinder
# disambiguation cheater that removes duplicate hits
  dcheat:             @local::lbne35t_disambigcheat
  fasthitdc:          @local::lbne35t_disambigcheat
# reconstruction using gaushit and disambiguration cheater
  fuzzydc:            @local::lbne35t_fuzzycluster
  dbclusterdc:        @local::lbne35t_dbcluster
  costrkdc:           @local::lbne35t_cosmictracker
  stitchdc:           @local::lbne35t_trackstitcher
  pandoradc:          @local::lbne35t_pandora
  particlestitcherdc: @local::lbne35t_particlestitcher
  particletracksdc:   {module_type: PFParticleTrackMaker}
# actual disambiguation
  hit35t:             @local::lbne35t_hitfinder35t
# reconstruction using disambiguated hits
  fuzzy:              @local::lbne35t_fuzzycluster
  dbcluster:          @local::lbne35t_dbcluster
  costrk:             @local::lbne35t_cosmictracker
  stitch:             @local::lbne35t_trackstitcher
  pandora:            @local::lbne35t_pandora
  particlestitcher:   @local::lbne35t_particlestitcher
  particletracks:     {module_type: PFParticleTrackMaker}
#  kalmanhit:         @local::lbne35t_track3Dkalmanhit

 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns, caldata, hitcheat, clustercheat, trackcheat,
         fasthit, fasthitdc,
         gaushit, dcheat, fuzzydc, dbclusterdc, costrkdc, stitchdc, pandoradc, particlestitcherdc, particletracksdc,
         hit35t, fuzzy, dbcluster, costrk, stitch, pandora, particlestitcher, particletracks ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
 }
}
### Here, we overwrite ALL module labels with the ones defined above.
physics.producers.clustercheat.HitModuleLabel:         "hitcheat"
physics.producers.trackcheat.CheatedClusterLabel:      "clustercheat"
physics.producers.fasthitdc.ChanHitLabel:              "fasthit"
physics.producers.fuzzydc.HitsModuleLabel:             "dcheat"
physics.producers.dbclusterdc.HitsModuleLabel:         "dcheat"
physics.producers.costrkdc.ClusterModuleLabel:         "dbclusterdc"
physics.producers.stitchdc.TrackModuleLabel:           "costrkdc"
physics.producers.stitchdc.SpptModuleLabel:            "costrkdc"
physics.producers.fuzzy.HitsModuleLabel:               "hit35t"
physics.producers.dbcluster.HitsModuleLabel:           "hit35t"
physics.producers.costrk.ClusterModuleLabel:           "dbcluster"
physics.producers.stitch.TrackModuleLabel:             "costrk"
physics.producers.stitch.SpptModuleLabel:              "costrk"
#physics.producers.kalmanhit.HitModuleLabel:            "hit35t"
#physics.producers.kalmanhit.ClusterModuleLabel:        "fuzzy"
#Pandora configurations
physics.producers.pandoradc.HitFinderModuleLabel:           "dcheat"
physics.producers.particlestitcherdc.PFParticleModuleLabel: "pandoradc"
physics.producers.particlestitcherdc.UseXCoordinate:        false
physics.producers.particletracksdc.PFParticleModuleLabel:   "particlestitcherdc"
physics.producers.particletracksdc.SpacePointModuleLabel:   "pandoradc"
physics.producers.pandora.HitFinderModuleLabel:             "hit35t"
physics.producers.particlestitcher.PFParticleModuleLabel:   "pandora"
physics.producers.particlestitcher.UseXCoordinate:          false
physics.producers.particletracks.PFParticleModuleLabel:     "particlestitcher"
physics.producers.particletracks.SpacePointModuleLabel:     "pandora"
